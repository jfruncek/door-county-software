= Conventions =
  * Standard directory layout for projects
  * A single Maven project produces a single output
  * Standard naming conventions (such as {{{commons-logging-1.2.jar}}}

Maven's Super POM carries with it all the default conventions that Maven encourages, and is the analog of the Java language's java.lang.Object class.

= Plugins ==
  * everything accomplished in Maven is the result of a plugin executing
  * execution is coordinated by Maven's build life cycle in a declarative fashion

= Dependencies ==

  * The dependencies contained within the {{{dependencyManagement}}} element are used only to state the preference for a version and by themselves do not affect a project's dependency graph, whereas the top-level {{{dependencies}}} element does. _This means that a dependency *must* be inherited or explicitly declared in the {{{dependencies}}} element. Also version is required in the {{{dependencyManagement}}} element but not in the {{{dependencies}}} element_
  * order of elements doesn't matter

= Links =

[http://www.sonatype.com/people/2009/04/how-to-convert-from-ant-to-maven-in-5-minutes/ Convert Ant to Maven]